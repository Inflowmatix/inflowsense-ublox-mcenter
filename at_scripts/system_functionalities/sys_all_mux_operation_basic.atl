/*******************************************************************************
* Copyright (c) 2020 u-blox AG, Thalwil, Switzerland.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************
* Synopsis:     sys_all_mux_operation_basic.atl
* Topic:        system_functionalities
* Version:      1.0
* Author:       hmeh
* Description:
*       This script has the general purpose to demonstrate how to open,
*       close, and send data on the module MUX channels.
*******************************************************************************
* Modules:      All
* Tested on:    SARA-R4, SARA-R5
*******************************************************************************/

// Wait after every command can be set by this variable.
int wait_after_mux_packet_ms = 1000;

// Opens/Start mux 
void mux_open()
{
    SENDAT("AT+CMUX=0,0,,1500,150,3,200", 5000, "OK"); 
    PAUSE(wait_after_mux_packet_ms);
    
    ECHO("___MUX_ON_START___");
    ECHO("SABM channel 0 packet");
    SENDHEX("F9 03 3F 01 1C F9");  //SABM Channel 0
    PAUSE(wait_after_mux_packet_ms);
    
    ECHO("SABM channel 1 packet");
    SENDHEX("F9 07 3F 01 DE F9");  //SABM Channel 1
    PAUSE(wait_after_mux_packet_ms);
    
    ECHO("SABM channel 2 packet");
    SENDHEX("F9 0B 3F 01 59 F9");  //SABM Channel 2
    PAUSE(wait_after_mux_packet_ms);
    
    ECHO("SABM channel 3 packet");
    SENDHEX("F9 0F 3F 01 9B F9");  //SABM Channel 3
    PAUSE(wait_after_mux_packet_ms);
}

// send some AT commands to channel 1
void send_AT_command_Channel_1(){

    // SEND AT on channel 1
    ECHO("SEND AT on channel 1");
    SENDHEX("F9 07 EF 07 41 54 0D D3 F9");    
    PAUSE(wait_after_mux_packet_ms);

    // SEND AT+CGMM on channel 1
    ECHO("SEND AT+CGMM on channel 1");
    SENDHEX("F9 07 EF 11 41 54 2B 43 47 4D 4D 0D 2B F9"); 
    PAUSE(wait_after_mux_packet_ms);
}

// send some AT commands to channel 2
void send_AT_command_Channel_2(){
 
    // SEND AT on channel 2
    ECHO("SEND AT on channel 2");
    SENDHEX("F9 0B EF 07 41 54 0D 54 F9");    
    PAUSE(wait_after_mux_packet_ms); 
    
    // SEND AT+CGSN on channel 2
    ECHO("SEND AT+CGSN on channel 2");
    SENDHEX("F9 0B EF 11 41 54 2B 43 47 53 4E 0D AC F9"); 
    PAUSE(wait_after_mux_packet_ms);
}

// send some AT commands to channel 3
void send_AT_command_Channel_3(){

    // SEND ATE0 on channel 3
    ECHO("SEND ATE0 on channel 3");
    SENDHEX("F9 0F EF 0B 41 54 45 30 0D 9F F9");  
    PAUSE(wait_after_mux_packet_ms); 
    
    // SEND AT+CGMR on channel 3
    ECHO("SEND AT+CGMR on channel 3");
    SENDHEX("F9 0F EF 11 41 54 2B 43 47 4D 52 0D 6E F9"); 
    PAUSE(wait_after_mux_packet_ms); 
}

// Sends command to multiple channels of mux
void mux_send_AT_commands(){
	send_AT_command_Channel_1();
	send_AT_command_Channel_2();
	send_AT_command_Channel_3();
}

// Close Mux commands
void mux_close()
{
    ECHO("DISC channel 1 packet");
    SENDHEX("F9 0F 53 01 7A F9");      //DISC
    PAUSE(wait_after_mux_packet_ms);
    
    ECHO("DISC channel 2 packet");
    SENDHEX("F9 0B 53 01 B8 F9");      //DISC
    PAUSE(wait_after_mux_packet_ms);
    
    ECHO("DISC channel 3 packet");
    SENDHEX("F9 07 53 01 3F F9");      //DISC
    PAUSE(wait_after_mux_packet_ms);
    
    ECHO("Multiplexer close Down on channel 0 packet");
    SENDHEX("F9 03 EF 05 C3 01 F2 F9"); //UIH Mux Close Down command
    PAUSE(wait_after_mux_packet_ms);
    ECHO("___MUX_OFF___");
}

// Run main funciton
void main()
{
    mux_open();
    mux_send_AT_commands();
    mux_close();
}
