/**************************************************************************************
*  Copyright (c) 2020 u-blox AG, Thalwil, Switzerland.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
***************************************************************************************
* Synopsis:     debug_saraR41_preProductionScript_basic.atl
* Topic:        debug-ability
* Version:      1.0
* Author:       clee, aayy
* Description:
*       This script has the general purpose to help configuring the target module which
*       was received directly from the factory.
*
*       PLEASE SET THE FOLLOWING PARAMETERS BEFORE RUNNING
*       THE SCRIPT:
*       <APN>, <PDP_type>               	in +CGDCONT (LINE 154)
*       <greeting_text>                 	in +CSGT (LINE 101)
*       <mno_profile>                       in +UMNOPROF (LINE 110)
*       <bandmask>                      in +UBANDMASK (LINE 131)
*       <rat_type>                      in +URAT (LINE 134)
*       <srv_domain>                        in +USVCDOMAIN (LINE 137)
*
*       Example: (for AT&T Network)
*
*       <APN>= broadband, <PDP_type>= IP        	in +CGDCONT (LINE 154)
*       <greeting_text>= Modem Ready                in +CSGT (LINE 101)
*       <mno_profile>= 100              	in +UMNOPROF (LINE 110)
*       <bandmask>= 2074                	in +UBANDMASK (B2,B4,B5,B12)(LINE 131)
*       <rat_type>= 7                       in +URAT for CAT M1(LINE 134)
*       <srv_domain>= 2                 	in +USVCDOMAIN for CS/PS (LINE 137)
*
*       This script assumes sim was inserted before starting
*       PLEASE REFER AT COMMAND MANUAL FOR REFERENCE
****************************************************************************************
* Modules:      SARA-R41x-04
* Tested on:    SARA-R41x-04
***************************************************************************************/

void send_AT_command(string cmd, int msTimeOut, string expResp)
{
    PAUSE(50);
    string resp = SENDAT(cmd, msTimeOut, expResp);
    ECHO("response = " + resp);
}

// this function is used to send the AT commands and prints the response
void repeated_at_command(string cmd, int msTimeOut, string expResp)
{
// adding For Loop to make sure AT commands returns the correct output in case ERROR is returned due to timing issues
    for(int i=0;i<=15;i++){
        PAUSE(40);                      // 40ms delay was introduced; as it is advised to maintain 20ms delay in between AT commands
        string resp = SENDAT(cmd, msTimeOut, expResp);      // this command sends the "cmd" - At command, and waits for msTimeOut or for "expResp"
        ECHO("execution count of above command" + i);       // displays the index of Command sent
        if( resp != expResp)                	// if command gives back error, the same command will be sent again until it resends correct output
        {
            PAUSE 1000;
        }
        else{
            break;                      // terminate Loop incase of successful response
        }
    }
        
}


// this function sends the AT commands in Sequence
void run_bootup_commands(void)
{

    PAUSE(5000);                        	// first time bootup delay
    
    send_AT_command("AT", 10000, "OK");
    
    // this command enables Verbose Error values
    send_AT_command("AT+CMEE=2", 10000, "OK");
    
    // this command provides with the FW version of Module
    send_AT_command("AT+CGMR", 10000, "OK");
    
    // this command provides with the IMEI of Module
    send_AT_command("AT+CGSN", 10000, "OK");
    
    // this command provides with the Module Type
    send_AT_command("ATI0", 10000, "OK");
    
    // this command provides with the Module Type and other parameters
    send_AT_command("ATI9", 10000, "OK");
    
    // checks for previous backup operation details
    send_AT_command("AT+UBKUPDATA?", 10000, "OK");
    
    // checks for the previous set Greeting message
    send_AT_command("AT+CSGT?", 10000, "OK");
    
    // setting the desired Greeting Text
    send_AT_command('AT+CSGT=1,"<greeting_text>"', 10000, "OK");
    
    // reading the device functionality mode
    send_AT_command("AT+CFUN?", 10000, "OK");
    
    // set the module to minimum functionality mode
    send_AT_command("AT+CFUN=0", 10000, "OK");
    
    // setting the module to desired profile
    send_AT_command("AT+UMNOPROF=<mno_profile>", 10000, "OK");
    
    // rebooting the module
    send_AT_command("AT+CFUN=15", 10000, "OK");
    
    // wait for Greeting Text
    WAIT("Modem Ready", 15000);
    
    // reading the MNO profile value 
    send_AT_command("AT+UMNOPROF?", 10000, "OK");

    // disabling LWM2M. This setting is persistant and please do not turn off/ reboot the module before 4 sec, thus adding 4Sec delay below before CFUN=15 
    send_AT_command("AT+ULWM2M=1,1", 10000, "OK");
    
    // reading Power saving control value
    send_AT_command("AT+UPSV?", 10000, "OK");
    
    // setting the module to minimum functionality mode
    send_AT_command("AT+CFUN=0", 10000, "OK");
    
    // setting the desired Bandmask
    send_AT_command("AT+UBANDMASK=0,<bandmask>", 10000, "OK");
    
    // setting the preferred RAT type
    send_AT_command("AT+URAT=<rat_type>", 10000, "OK");
    
    // setting the preferred service domain
    send_AT_command("AT+USVCDOMAIN=<srv_domain>", 10000, "OK");
    
    // enabling CSCON URC's
    send_AT_command("AT+CSCON=1", 10000, "OK");

    // enabling PSM URC's
    send_AT_command("AT+UPSMR=1", 10000, "OK");
    
    // reading the UTEST command
    send_AT_command("AT+UTEST?", 10000, "OK");
    
    // setting The UTEST mode
    send_AT_command("AT+UTEST=1", 10000, "OK");	
    
    ECHO("Setting the desired APN");
    
    // setting APN
    repeated_at_command('AT+CGDCONT=1,"IP","<APN>"', 10000, "OK");
    
    // reading the APN
    send_AT_command("AT+CGDCONT?", 10000, "OK");
    
    // disabling the eDRX feature
    send_AT_command("AT+CEDRXS=0,2", 10000, "OK");
    send_AT_command("AT+CEDRXS=0,4", 10000, "OK");
    send_AT_command("AT+CEDRXS=0,5", 10000, "OK");
    
    // disabling the PSM feature
    send_AT_command("AT+CPSMS=0", 10000, "OK");
     
    // reading the time zone update setting
    send_AT_command("AT+CTZU?", 10000, "OK");
    
    // setting the storage type for SMS
    send_AT_command('AT+CPMS="ME","ME","ME"', 10000, "OK");
    
    // pause needed after disabling LwM2M to ensure 4sec gap if a power down or reboot sent
    PAUSE(4000);
    
    // rebooting the module
    send_AT_command("AT+CFUN=15 ", 10000, "OK");
    
    // waiting for the Greeting Text
    WAIT("Modem Ready", 15000);
    
    // reading the UTEST settings
    send_AT_command("AT+UTEST?", 10000, "OK");
    
    // setting the module to non signalling mode
    send_AT_command("AT+UTEST=1", 10000, "OK");
    
    // reading the Device mode
    send_AT_command("AT+CFUN?", 10000, "OK");
    
    // TX test executed on B12 TX
    send_AT_command("AT+UTEST=3,123130,17,,,5000", 10000, "OK");
    
    // setting the device to signalling mode
    send_AT_command("AT+UTEST=0", 10000, "OK");
    
    // checking device mode
    send_AT_command("AT+CFUN?", 10000, "OK");
    
    ECHO("please check the following parameters +CFUN:1 and +UTEST:0 for signalling mode");
    
    // reading the LWM2M settings
    send_AT_command("AT+ULWM2M?", 10000, "OK");
    
    ECHO(" Turn off LWM2M manually at bootup if not turned off");
    
    // reading the bandmask
    send_AT_command("AT+UBANDMASK?", 10000, "OK");
    
    // reading the RAT type
    send_AT_command("AT+URAT?", 10000, "OK");
    
    // reading the eDRX Settings
    send_AT_command("AT+CEDRXS?", 10000, "OK");
    
    // reading then PSM settings
    send_AT_command("AT+CPSMS?", 10000, "OK");
    
    // reading the service domain values
    send_AT_command("AT+USVCDOMAIN?", 10000, "OK");
    
    // reading the URC enabling status
    send_AT_command("AT+CSCON?", 10000, "OK");
    
    // reading the URC enabling status
    send_AT_command("AT+UPSMR?", 10000, "OK");
    
    ECHO("Module ready to use; device will power off now");
    
    // gracefully shutdown the module
    send_AT_command("AT+CPWROFF", 40000, "OK");

}

// below is the main function, its where the execution of script starts
void main(){

    ECHO("If you haven't set the parameters in script before please stop the script, set the values ,then Save and restart the script");
    
    run_bootup_commands();
}
