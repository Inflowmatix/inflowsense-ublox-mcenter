/*
 * Inflowmatix script for u-blox m-center to configure a u-blox SARA-R412M-02B 
 * cellular network module, phase 1.
 *
 * Configuration phases:
 *  1. Reset MNO profile to start from a clean slate. <=== THIS SCRIPT
 *  2. Set the desired MNO profile.
 *  3. Adjust MNO profile settings.
 *
 * The AT sequences are a reasonable facsimile of the InflowSense 1P firmware
 * as of version v5.3.8. 
 *
 * Beware that the reboot timings and behaviour may differ because of USB and 
 * m-center limitations: the AT COM port may or may not disconnect over a reboot
 * cycle and if the MC_PORT_CONNECT macro does perform a reconnect then it
 * annoyingly sends a variety of AT commands itself, thus interfering with the
 * InflowSense 1P firmware sequence.
 *
 * Simon Moore
 * 2024-05-09
 * Copyright (c) 2024 Inflowmatix. All rights reserved.
 */

ECHO("==== inflowmatix_sara_r412_configure_phase_1.atl ====");

/* Clear the m-center AT terminal log and start logging. */
MC_TERMINAL_LOG(true);
MC_TERMINAL_LOGCLEAR();

/* Start. */
ECHO("Configuration phase 1: started");

/* Ensure the AT COM port is connected. */
bool com_port_connected = MC_PORT_CONNECT();
if(!com_port_connected) {
    STOP("ERROR! Failed to connect AT COM port");
}

/* Verify AT connectivity. */
bool at_connected = verify_at_connectivity();
if(!at_connected)
{
    STOP("ERROR! Failed to connect AT interface");
}

/* Enable error reporting using numeric error codes. */
send_at_command("AT+CMEE=1", timeout_default, "OK");

/*
 * Identify the SIM ICCID.
 *
 * This is requested by the communications service, not the modem driver.
 * This is undesirable and needs refactoring in the InflowSense firmware.
 */
send_at_command("AT+CCID", timeout_default, "OK");

/*
 * Identify the modem firmware versions.
 *
 * This is requested by the communications service, not the modem driver.
 * This is undesirable and needs refactoring in the InflowSense firmware.
 */
send_at_command("ATI9", timeout_default, "OK");

/*
 * Identify the modem IMEI.
 * 
 * This is requested by the communications service, not the modem driver.
 * This is undesirable and needs refactoring in the InflowSense firmware.
 */
send_at_command("AT+CGSN", timeout_default, "OK");

/*
 * Identify the modem firmware versions.
 *
 * This is requested by the modem driver.
 * This is redundant given this was done earlier.
 */
send_at_command("ATI9", timeout_default, "OK");

/* Identify the SIM Service Provider Name (SPN), if any. */
send_at_command("AT+CRSM=176,28486,0,0,17", timeout_r412m_crsm, "OK");

/*
 * Deregister from the network.
 *
 * This is required before attempting to set the MNO profile.
 */
send_at_command("AT+COPS=2", timeout_r412m_cops, "OK");

/*
 * Set the MNO profile to something different from the desired profile.
 *
 * This is an attempt to ensure the MNO profile settings are returned to default
 * values. It is not adequate to just set the MNO profile, because that may not
 * return all of the settings to their default values.
 *
 * For example, if a desired profile has been set, then one of its settings is 
 * subsequently modified, then setting the desired profile again does not return 
 * the modified setting to its default value.
 *
 * Hence it is necessary to first set a different profile e.g. 0, then set the 
 * desired profile e.g. 100.
 */
send_at_command("AT+UMNOPROF=0", timeout_default, "OK");

/* Reboot to apply the MNO profile setting. */
send_at_command("AT+CFUN=15", timeout_default, "OK");

/* Complete. */
ECHO("Configuration phase 1: complete, rebooting...");
